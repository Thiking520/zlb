<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tool="http://www.springframework.org/schema/tool" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.0.xsd 
	http://www.springframework.org/schema/tool 
	http://www.springframework.org/schema/tool/spring-tool-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    ">
<!-- 启用spring mvc 注解 -->
   <context:component-scan base-package="org.soa.test.activemq"/>
 
   <!-- 配置JMS连接工厂 -->
   <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
       <property name="brokerURL" value="failover:(tcp://192.168.24.32:61618)" />
       <!--解决接收消息抛出异常：javax.jms.JMSException: Failed to build body from content. Serializable class not available to broke-->
       <property name="trustAllPackages" value="true"/>
       <!-- 是否异步发送 -->
       <property name="useAsyncSend" value="true" />
   </bean>
 
   <!--   Queue模式 Begin -->
   <!-- 定义消息队列（Queue） -->
   <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
       <!-- 设置消息队列的名字 -->
       <constructor-arg>
           <value>defaultQueueName</value>
       </constructor-arg>
   </bean>
   
   <!-- 配置JMS模板，Spring提供的JMS工具类，它发送、接收消息。（Queue） -->
   <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
       <property name="connectionFactory" ref="connectionFactory" />
       <property name="defaultDestination" ref="queueDestination" />
       <property name="pubSubDomain" value="false"/>
       <!--接收超时时间-->
       <!--<property name="receiveTimeout" value="10000" />-->
   </bean>
   
   <!--  Topic模式  Begin -->
   <!-- 定义消息队列名称 -->
   <bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
       <constructor-arg>
           <value>topic1</value>
       </constructor-arg>
   </bean>
   
   <!-- 配置JMS模板，Spring提供的JMS工具类，它发送、接收消息。（Topic） -->
   <bean id="jmsTemplateTopic" class="org.springframework.jms.core.JmsTemplate">
       <property name="connectionFactory" ref="connectionFactory" />
       <property name="defaultDestination" ref="topicDestination" />
       <!-- 订阅发布模式 -->
       <property name="pubSubDomain" value="true"/>
   </bean>
 
   <!-- 消息主题监听者 和 主题监听容器 可以配置多个，即多个订阅者 -->
   <!-- 消息主题监听者(Topic) -->
   <bean id="topicMessageListener1" class="org.soa.test.activemq.topics.TopicMessageListener1" />
   <bean id="topicMessageListener2" class="org.soa.test.activemq.topics.TopicMessageListener2" />
   
   <!--============================监听模块==============-->
   <bean id="queueDestination3" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>queue3</value>
        </constructor-arg>
    </bean>
    
   <bean id="studentInfoHandler" class="org.soa.test.activemq.listeners.StudentInfoHandler" />
   
   <!-- 消息监听容器（Queue），配置连接工厂，监听的队列是queue3，监听器是上面定义的监听器 -->
   <!--加载spring配置后，studentInfoHandler的onMessage方法自动运行并接收队列-->
   <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
       <property name="connectionFactory" ref="connectionFactory" />
       <property name="destination" ref="queueDestination3" />
       <property name="messageListener" ref="studentInfoHandler" />
   </bean>
   <!-- Topic接收监听（Topic）Topic的第1个监听者 -->
   <bean id="topicJmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
       <property name="connectionFactory" ref="connectionFactory" />
       <property name="destination" ref="topicDestination" />
       <property name="messageListener" ref="topicMessageListener1" />
   </bean>
   
   <!-- Topic接收监听（Topic）Topic的第2个监听者-->
   <bean id="topicJmsContainer2"  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
       <property name="connectionFactory" ref="connectionFactory" />
       <property name="destination" ref="topicDestination" />
       <property name="messageListener" ref="topicMessageListener2" />
   </bean>
   <!--  Topic模式  End -->
   <!--   Queue模式 End -->
</beans>
 