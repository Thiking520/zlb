package com.zhilianbao.erp.auth.mapper.goods;

import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.zhilianbao.erp.auth.entity.goods.GoodsSkuBean;
import com.zhilianbao.erp.auth.vo.goods.GoodsSkuVo;
import com.zhilianbao.erp.common.mapper.BaseMapper;
import com.zhilianbao.erp.common.vo.ViewSearchVo;

/**
 * 商品规格
 * @Company: 智联宝 
 * @author ：chenll
 * @date ：2017年3月30日 下午7:35:12
 */
public interface GoodsSkuMapper extends BaseMapper<GoodsSkuBean> {
	
	/**
	 * 分页查询
	 * @param vo
	 * @return ：List<GoodsSkuVo>
	 * @author ：chenll
	 * @date ：2017年3月30日 下午7:12:34
	 */
	List<GoodsSkuVo> queryListByPage(ViewSearchVo vo);

	/**
	 * 根据id查询详情
	 * @param id
	 * @return ：GoodsSkuVo
	 * @author ：chenll
	 * @date ：2017年3月30日 下午7:12:46
	 */
	GoodsSkuVo queryById(GoodsSkuVo vo);

	/**
	 * 批量删除
	 * @param deleteIds ：void
	 * @author ：chenll
	 * @date ：2017年3月30日 下午7:12:57
	 */
	void deleteBatchByIds(@Param("deleteIds")Long[] deleteIds);

	/**
	 * 根据父id获取所有子项
	 * @param id
	 * @return ：List<GoodsSkuVo>
	 * @author ：chenll
	 * @date ：2017年3月30日 下午7:13:10
	 */
	List<GoodsSkuVo> getListByParentId(Long id);
	
	/**
	 * 商品规格，删除操作时，查询要删除的t_goods_sku有没有被引用
	 * @param deleteIds
	 * @return ：int
	 * @author ：chenll
	 * @date ：2017年3月30日 下午7:19:14
	 */
	int getCountByDeleteIds(@Param("deleteIds")Long[] deleteIds);

	/**
	 * 查询所有，以树形结构展示
	 * @param vo
	 * @return ：List<GoodsSkuVo>
	 * @author ：chenll
	 * @date ：2017年4月21日 下午2:33:52
	 */
	List<GoodsSkuVo> initTree(ViewSearchVo vo);

	/**
	 * 根据运营商id获取所有规格信息：电商平台需要调用的接口
	 * @param operatorId
	 * @return ：List<GoodsSkuVo>
	 * @author ：chenll
	 * @date ：2017年5月24日 下午3:39:57
	 */
	List<GoodsSkuVo> queryAll(@Param("operatorId")Long operatorId,@Param("pid")Long pid);
	
	/**
	 * 如果是新增，则传入名称查询，如果存在则返回1，否则返回null<br>
	 * 如果是修改，则传入id以及名称，查找除去id等于传入id的值以外名称等于传入的名称的数据，如果存在则返回1，否则返回null。
	 * @Title: sKuNameIsExists 
	 * @author: LiLinDong
	 * @param: 
	 * @return: Integer    返回类型 
	 * @Description:
	 */
	Integer sKuNameIsExists(GoodsSkuVo vo);
	
}