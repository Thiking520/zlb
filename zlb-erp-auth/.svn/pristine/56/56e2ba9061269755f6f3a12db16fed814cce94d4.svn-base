package com.zhilianbao.erp.auth.impl.goods;


import java.util.List;

import org.apache.commons.collections.CollectionUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.zhilianbao.erp.auth.mapper.goods.CodeRuleItemMapper;
import com.zhilianbao.erp.auth.service.goods.ICodeRuleItemService;
import com.zhilianbao.erp.auth.vo.goods.CodeRuleItemVo;
import com.zhilianbao.erp.common.constant.Constants;
import com.zhilianbao.erp.common.constant.ResultEnum;
import com.zhilianbao.erp.common.vo.ResponseResult;
import com.zhilianbao.erp.common.vo.ViewSearchVo;
@Service
public class CodeRuleItemServiceImpl implements ICodeRuleItemService {
	
	private static Logger logger=LogManager.getLogger(CodeRuleItemServiceImpl.class);
	
	@Autowired
	private CodeRuleItemMapper codeRuleItemMapper;
	
	public ResponseResult<CodeRuleItemVo> queryListByPage(ViewSearchVo vo) {
		ResponseResult<CodeRuleItemVo> rspResult = new ResponseResult<CodeRuleItemVo>();
		try {
			// 与mysql中的limit参数一致offset,limit
			PageHelper.offsetPage(vo.getOffset(), vo.getPageSize()); // 核心分页代码 开启分页查询，后面第一条查询语句会被分页
			// 注意:如果有两条查询语句，第二条不会被分页
			List<CodeRuleItemVo> list = codeRuleItemMapper.queryListByPage(vo);
			if (Constants.ZERO == list.size()) {
				return new ResponseResult<CodeRuleItemVo>(ResultEnum.EMPTY);
			}
			PageInfo<CodeRuleItemVo> page = new PageInfo<CodeRuleItemVo>(list);
			long total = page.getTotal();// 获取数据库中的总条数
			List<CodeRuleItemVo> resultList = page.getList();// 推荐使用这个获取结果集
			
			if (CollectionUtils.isEmpty(resultList)) {
				return new ResponseResult<CodeRuleItemVo>(ResultEnum.EMPTY);
			}
            //分页必填的两个参数
            rspResult.setTotal(total);
			rspResult.setRows(resultList);
		} catch (Exception e) {
			logger.error("【公共数据-编码规则项】分页查询出错{}",vo,e);
			return new ResponseResult<CodeRuleItemVo>(ResultEnum.SYS_ERR);
		}
		return rspResult;
	}
}
