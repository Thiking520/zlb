package com.zhilianbao.erp.auth.entity.goods;

import java.io.Serializable;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.apache.commons.lang.builder.ToStringBuilder;

import com.zhilianbao.erp.common.entity.BaseBean;
import com.zhilianbao.erp.common.util.LogBeanNoNullStyle;

@Table(name = "t_goods_property")
public class GoodsPropertyBean extends BaseBean implements Serializable{
	private static final long serialVersionUID = 671606311057393022L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private Long operatorId;
	private String propertyName;
	private Integer type;
	private Integer isNotNull;
	private Integer isMust;

	/** 
	 * 获取
	 * @return id 
	 */
	public Long getId() {
		return id;
	}



	/** 
	 * 设置
	 * @param id 
	 */
	public void setId(Long id) {
		this.id = id;
	}



	/** 
	 * 获取
	 * @return operatorId 
	 */
	public Long getOperatorId() {
		return operatorId;
	}



	/** 
	 * 设置
	 * @param operatorId 
	 */
	public void setOperatorId(Long operatorId) {
		this.operatorId = operatorId;
	}



	/** 
	 * 获取
	 * @return propertyName 
	 */
	public String getPropertyName() {
		return propertyName;
	}



	/** 
	 * 设置
	 * @param propertyName 
	 */
	public void setPropertyName(String propertyName) {
		this.propertyName = propertyName;
	}



	/** 
	 * 获取
	 * @return type 
	 */
	public Integer getType() {
		return type;
	}



	/** 
	 * 设置
	 * @param type 
	 */
	public void setType(Integer type) {
		this.type = type;
	}



	/** 
	 * 获取
	 * @return isNotNull 
	 */
	public Integer getIsNotNull() {
		return isNotNull;
	}



	/** 
	 * 设置
	 * @param isNotNull 
	 */
	public void setIsNotNull(Integer isNotNull) {
		this.isNotNull = isNotNull;
	}
	
	/** 
	 * 获取
	 * @return isMust 
	 */
	public Integer getIsMust() {
		return isMust;
	}



	/** 
	 * 设置
	 * @param isMust 
	 */
	public void setIsMust(Integer isMust) {
		this.isMust = isMust;
	}



	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this, new LogBeanNoNullStyle());
	}
}