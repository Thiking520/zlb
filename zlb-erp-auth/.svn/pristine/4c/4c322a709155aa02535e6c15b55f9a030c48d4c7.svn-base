package com.zhilianbao.erp.auth.redis;

import java.text.MessageFormat;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.alibaba.fastjson.JSON;
import com.zhilianbao.erp.auth.impl.parameter.ParamInit;
import com.zhilianbao.erp.auth.utils.cache.DictCacheUtil;
import com.zhilianbao.erp.auth.utils.cache.ParamCacheUtil;
import com.zhilianbao.erp.auth.vo.parameter.rpc.DictVo;
import com.zhilianbao.erp.common.constant.Constants;


@RunWith(SpringJUnit4ClassRunner.class)
//@ContextConfiguration(locations = "classpath*:/META-INF/spring/dubbo-provider.xml") 
//引进dubbo后正确方式
@ContextConfiguration(locations = { "classpath*:/application.xml","classpath*:/META-INF/spring/dubbo-consumer.xml" })
//@ContextConfiguration(locations = "classpath*:application.xml") //错误的加载方式
public class TestDict {
		
	@Test
	public void testInitDict(){
		DictCacheUtil.remove();
		ParamCacheUtil.remove();
//		Integer count = ParamInit.updateDictCacheData();
//		System.out.println(count);
//		count = ParamInit.updateParamCacheData();
//		System.out.println(count);
	}
		
	@Test
	public void testGetListByType(){
		//通过运营商ID和字典类型获取字典list
		//通过key获取list
		Long operatorId = 1L;
		List<DictVo> list = DictCacheUtil.get(operatorId,Constants.TYPE_COMMON_ACTIVE);
		for(DictVo bean:list){
			System.out.println(JSON.toJSONString(bean));
		}
	}
	
	@Test
	public void testDict(){
		//通过类型key跟value获取字典描述
		Long operatorId = 1L;
		String desc = DictCacheUtil.getDescOfValueByType(operatorId, Constants.TYPE_COMMON_ACTIVE,String.valueOf(0));
		System.out.println(desc);
	}
	
	@Test
	public void testDictParam(){
		String value = DictCacheUtil.getDescOfValueByType(1L,Constants.TYPE_PARAM_GROUP, String.valueOf(10));;
		System.out.println(value);
	}
	
	@Test
	public void testGlobalParam(){
		Integer value = ParamCacheUtil.getInt(2L, "test_operator");
		System.out.println(value);
	}
	
	@Test
	public void testNull(){
		Integer value = ParamCacheUtil.getInt(1L, "test_operator");
		System.out.println(value);
	}
}
